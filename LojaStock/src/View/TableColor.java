/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import controller.ProdutoJpaController;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.JComponent;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import metodos.Main;
import modelo.Produto;

/**
 *
 * @author Raimundo Jose
 */
public class TableColor extends java.awt.Frame {

    /**
     * Creates new form TableColor
     */
    
    JTable table;
    List<Produto> listaTipo = new ArrayList<>();
    EntityManagerFactory emf = new metodos.ControllerAcess().getEntityManagerFactory();
    
    public TableColor() {
        initComponents();
        
        Object[] columnNames = new String[]{"CODIGO", "PRODUTO", "QTD. ARMAZEM", "QTD. LOJA", "PRECOS", "EXCLUIR"};
        listaTipo = new ProdutoJpaController(emf).findProdutoEntities();
        
        
        Object[][] data = null; // new Object[][]{{"Buy", "IBM", new Double(1000), new Double(80.5), Boolean.TRUE}};
        
        for (int i = 0; i < listaTipo.size(); i++) {
            Produto get = listaTipo.get(i);
            for (int j = 0; j < listaTipo.size(); j++) {
                
               data[i][j] = get.getCusto();
               data[i][j] = get.getCusto();
               data[i][j] = get.getCusto();
               data[i][j] = get.getDatacriacao();
               data[i][j] = get.getCusto();
               data[i][j] = get.getMargem();
               data[i][j] = get.getCusto();
            }
            
        }

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        
        table = new JTable(model) {
            
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component c = super.prepareRenderer(renderer, row, column);
                JComponent jc = (JComponent) c;

                //  Alternate row color
                if (!isRowSelected(row)) {
                    c.setBackground(row % 2 == 0 ? getBackground() : Color.LIGHT_GRAY);
                }

                return c;
            }
        };

        table.setPreferredScrollableViewportSize(table.getPreferredSize());
        table.changeSelection(0, 0, false, false);
        JScrollPane scrollPane = new JScrollPane(table);
        //getContentPane().add(scrollPane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                TableColor frame = new TableColor();
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
              
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
